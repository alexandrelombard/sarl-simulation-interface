/** 
 * 
 */
package io.sarl.sim.simulation.com

import io.sarl.sim.simulation.ControlAction
import io.sarl.sim.simulation.SimulationControl
import io.sarl.sim.simulation.SimulationControlCapacity
import java.net.DatagramPacket
import java.net.DatagramSocket
import java.net.InetAddress

/** 
 * UDP implementation of simulation control
 * @author Alexandre Lombard
 * 
 */
skill UdpSimulationControl implements SimulationControlCapacity {

	/** The IP address (currently hard-coded) */
	val ipAddress = InetAddress.getByName("127.0.0.1")
	
	/** The UDP port (currently hard-coded) */
	val port = 4242


	def install {
		//
	}

	def uninstall {
		//
	}
	
	def createBody(data : String) {
		val simulationControl = new SimulationControl(ControlAction.CreateBody, data)
		sendBuffer(simulationControl.toByteArray)
	}
	
	def setSimulationParameter(data : String) {
		val simulationControl = new SimulationControl(ControlAction.SetSimulationParameter, data)
		sendBuffer(simulationControl.toByteArray)
	}
	
	def simulationStart(data : String) {
		val simulationControl = new SimulationControl(ControlAction.SimulationStart, data)
		sendBuffer(simulationControl.toByteArray)
	}
	
	def simulationStep(data : String) {
		val simulationControl = new SimulationControl(ControlAction.SimulationStep, data)
		sendBuffer(simulationControl.toByteArray)
	}
	
	def simulationEnd(data : String) {
		val simulationControl = new SimulationControl(ControlAction.SimulationEnd, data)
		sendBuffer(simulationControl.toByteArray)
	}
	
	def sendBuffer(buffer : byte[]) {
		val packet = new DatagramPacket(buffer, buffer.length, ipAddress, port)
		val socket = new DatagramSocket()
		socket.send(packet)
		socket.close
	}
	
}
